generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Pengguna {
  id                    Int                    @id @default(autoincrement())
  nama_pengguna         String                 @unique
  email                 String                 @unique
  kata_sandi            String
  peran                 Peran                  @default(alumni)
  aktif                 Boolean                @default(true)
  email_terverifikasi   Boolean                @default(false)
  dibuat_pada           DateTime               @default(now())
  diperbarui_pada       DateTime               @updatedAt
  profilAlumni          ProfilAlumni?
  pertanyaanUmum        PertanyaanUmum[]
  umpanBalik            UmpanBalik[]
  diskusiForum          DiskusiForum[]
  balasanForum          BalasanForum[]
  galeri                Galeri[]
  bookmarkPekerjaan     BookmarkPekerjaan[]
  lowonganKerja         LowonganKerja[]
  beritaAgenda          BeritaAgenda[]
  pengaturanSistem      PengaturanSistem[]

  @@map("pengguna")
}

model ProfilAlumni {
  id                  Int      @id @default(autoincrement())
  id_pengguna         Int      @unique
  nim                 String?
  nama_lengkap        String
  telepon             String?
  alamat              String?
  tahun_lulus         Int?
  jurusan             String?
  fakultas            String?
  pekerjaan_saat_ini  String?
  perusahaan          String?
  foto_profil         String?
  biografi            String?
  url_website         String?
  dibuat_pada         DateTime @default(now())
  diperbarui_pada     DateTime @updatedAt
  pengguna            Pengguna @relation(fields: [id_pengguna], references: [id])

  @@map("profil_alumni")
}

model LowonganKerja {
  id                Int          @id @default(autoincrement())
  judul             String
  perusahaan        String
  lokasi            String?
  jenis_pekerjaan   JenisPekerjaan
  rentang_gaji      String?
  deskripsi         String
  persyaratan       String?
  url_lamaran       String?
  email_lamaran     String?
  diposting_oleh    Int
  status            StatusPekerjaan @default(menunggu)
  aktif             Boolean      @default(true)
  berakhir_pada     DateTime?
  dibuat_pada       DateTime     @default(now())
  diperbarui_pada   DateTime     @updatedAt
  dipostingOleh     Pengguna     @relation(fields: [diposting_oleh], references: [id])

  @@index([diposting_oleh], map: "lowongan_kerja_diposting_oleh_fkey")
  @@map("lowongan_kerja")
}

model BalasanForum {
  id                    String          @id @default(cuid())
  id_alumni             Int
  id_postingan_forum    Int
  konten                String          @db.Text
  id_induk              String?
  dibuat_pada           DateTime        @default(now())
  diperbarui_pada       DateTime        @updatedAt
  alumni                Pengguna        @relation(fields: [id_alumni], references: [id])
  postinganForum        DiskusiForum    @relation(fields: [id_postingan_forum], references: [id])
  induk                 BalasanForum?   @relation("BalasanKeBalasan", fields: [id_induk], references: [id])
  balasan               BalasanForum[]  @relation("BalasanKeBalasan")

  @@index([id_alumni], map: "balasan_forum_id_alumni_fkey")
  @@index([id_postingan_forum], map: "balasan_forum_id_postingan_forum_fkey")
  @@index([id_induk], map: "balasan_forum_id_induk_fkey")
  @@map("balasan_forum")
}

model DiskusiForum {
  id                      Int            @id @default(autoincrement())
  judul                   String
  konten                  String
  kategori                String?
  id_penulis              Int
  disematkan              Boolean        @default(false)
  dikunci                 Boolean        @default(false)
  jumlah_dilihat          Int            @default(0)
  jumlah_balasan          Int            @default(0)
  balasan_terakhir_pada   DateTime?
  dibuat_pada             DateTime       @default(now())
  diperbarui_pada         DateTime       @updatedAt
  penulis                 Pengguna       @relation(fields: [id_penulis], references: [id])
  balasanForum            BalasanForum[]

  @@index([id_penulis], map: "diskusi_forum_id_penulis_fkey")
  @@map("diskusi_forum")
}

model BeritaAgenda {
  id                 Int       @id @default(autoincrement())
  judul              String
  konten             String?
  gambar_utama       String?
  id_penulis         Int
  dipublikasikan     Boolean   @default(false)
  tanggal_publikasi  DateTime?
  tanggal_acara      DateTime?
  lokasi_acara       String?
  dibuat_pada        DateTime  @default(now())
  diperbarui_pada    DateTime  @updatedAt
  penulis            Pengguna  @relation(fields: [id_penulis], references: [id])

  @@index([id_penulis], map: "berita_agenda_id_penulis_fkey")
  @@map("berita_agenda")
}

model Galeri {
  id             Int      @id @default(autoincrement())
  judul          String
  deskripsi      String?
  jalur_gambar   String
  kategori       String?
  diunggah_oleh  Int
  dibuat_pada    DateTime @default(now())
  diunggahOleh   Pengguna @relation(fields: [diunggah_oleh], references: [id])

  @@index([diunggah_oleh], map: "galeri_diunggah_oleh_fkey")
  @@map("galeri")
}

model PertanyaanUmum {
  id                Int      @id @default(autoincrement())
  pertanyaan        String
  jawaban           String
  kategori          String?
  aktif             Boolean  @default(true)
  dibuat_oleh       Int
  dibuat_pada       DateTime @default(now())
  diperbarui_pada   DateTime @updatedAt
  dibuatOleh        Pengguna @relation(fields: [dibuat_oleh], references: [id])

  @@index([dibuat_oleh], map: "pertanyaan_umum_dibuat_oleh_fkey")
  @@map("pertanyaan_umum")
}

model BookmarkPekerjaan {
  id             Int      @id @default(autoincrement())
  id_pengguna    Int
  id_pekerjaan   Int
  dibuat_pada    DateTime @default(now())
  pengguna       Pengguna @relation(fields: [id_pengguna], references: [id])

  @@unique([id_pengguna, id_pekerjaan])
  @@map("bookmark_pekerjaan")
}

model Notifikasi {
  id             String           @id @default(cuid())
  id_pengguna    String
  judul          String
  pesan          String           @db.Text
  jenis          JenisNotifikasi
  telah_dibaca   Boolean          @default(false)
  url_tindakan   String?
  dibuat_pada    DateTime         @default(now())

  @@map("notifikasi")
}

model UmpanBalik {
  id                 Int                 @id @default(autoincrement())
  id_pengguna        Int?
  nama               String
  email              String
  kategori           KategoriUmpanBalik
  subjek             String
  pesan              String              @db.Text
  status             StatusUmpanBalik    @default(baru)
  tanggapan_admin    String?             @db.Text
  dibuat_pada        DateTime            @default(now())
  diperbarui_pada    DateTime            @updatedAt
  pengguna           Pengguna?           @relation(fields: [id_pengguna], references: [id])

  @@index([id_pengguna], map: "umpan_balik_id_pengguna_fkey")
  @@map("umpan_balik")
}

model Komentar {
  id                   Int        @id @default(autoincrement())
  konten               String
  id_penulis           Int
  id_artikel           Int?
  id_komentar_induk    Int?
  disetujui            Boolean    @default(true)
  dibuat_pada          DateTime   @default(now())
  diperbarui_pada      DateTime   @updatedAt
  komentarInduk        Komentar?  @relation("BalasanKomentar", fields: [id_komentar_induk], references: [id])
  balasan              Komentar[] @relation("BalasanKomentar")

  @@index([id_komentar_induk], map: "komentar_id_komentar_induk_fkey")
  @@map("komentar")
}

model Artikel {
  id                Int           @id @default(autoincrement())
  judul             String
  konten            String
  gambar_utama      String?
  id_penulis        Int
  status            StatusArtikel @default(draft)
  kategori          String?
  tag               String?
  jumlah_dilihat    Int           @default(0)
  dibuat_pada       DateTime      @default(now())
  diperbarui_pada   DateTime      @updatedAt

  @@map("artikel")
}

model PengaturanSistem {
  id                  Int      @id @default(autoincrement())
  kunci_pengaturan    String   @unique(map: "pengaturan_sistem_kunci_pengaturan_key")
  nilai_pengaturan    String?
  deskripsi           String?
  diperbarui_oleh     Int
  diperbarui_pada     DateTime @default(now())
  pengguna            Pengguna @relation(fields: [diperbarui_oleh], references: [id], map: "pengaturan_sistem_diperbarui_oleh_fkey")

  @@index([diperbarui_oleh], map: "pengaturan_sistem_diperbarui_oleh_fkey")
  @@map("pengaturan_sistem")
}

enum Peran {
  admin
  alumni
}

enum JenisPekerjaan {
  penuh_waktu
  paruh_waktu
  kontrak
  magang
}

enum StatusPekerjaan {
  menunggu
  disetujui
  ditolak
}

enum JenisNotifikasi {
  umum
  acara
  pekerjaan
  artikel
  sistem
}

enum KategoriUmpanBalik {
  bug
  fitur
  perbaikan
  keluhan
  lainnya
}

enum StatusUmpanBalik {
  baru
  ditinjau
  diselesaikan
  ditutup
}

enum StatusArtikel {
  draft
  menunggu
  dipublikasikan
  ditolak
}